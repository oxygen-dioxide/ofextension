const vscode = require("vscode");
// Object.defineProperty(exports, "__esModule", { value: true });

// exports.ofTaskProvider = void 0;

class ofTaskProvider{
	constructor(workspaceRoot){
		this.workspaceRoot=workspaceRoot;
	}
	async provideTasks(){
		console.log('ofextension: provideTask');
		return this.getTasks();
	}
	resolveTask(_task){
		console.log('ofextension: resolveTask');
		return undefined;
	}
	getTasks(){
		if (this.tasks != undefined) {
			return this.tasks;
		}
		var taski=undefined;
		this.tasks=[];
		// 该task用来预编译求解器
		taski=new vscode.Task(
			{type: "ofwmake",
			label:"ofBuild",
			command:[
				"cd ${workspaceFolder};",
				"source /opt/openfoam8/etc/bashrc && export WM_COMPILE_OPTION=Debug;",
				"wmake"],
			args: [],
			options: {},
			problemMatcher: [],
			group:{kind: "build", "isDefault": true},
			detail: "Task generated by ofextension."
			}, // definition
			vscode.TaskScope.Workspace, // scope
			'ofBuild', // name
			'ofwmake',  // source
			new vscode.ShellExecution(`source /opt/openfoam8/etc/bashrc && export WM_COMPILE_OPTION=Debug`,
				{cwd: this.workspaceRoot, executable:vscode.env.shell})
		);
		this.tasks.push(taski);
		return this.tasks;
	}
}
exports.ofTaskProvider = ofTaskProvider;

